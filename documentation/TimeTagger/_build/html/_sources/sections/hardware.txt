
********
Hardware
********


Input channels
==============

The *TimeTagger 20* has 8 SMA connectorized input channels numbered 0 to 7 throughout this document. The electrical
characteristics are tabulated below. Both rising and falling edges are detected on the input channels.
On the software level, rising edges correspond to channel numbers 0 to 7 and falling edges correspond to
respective channel numbers 8 to 15. Thereby, you can treat rising and falling edges in a fully equivalent fashion.

Electrical characteristics
---------------------------

+-----------------------+---------------+
| Property              | Value         |
+=======================+===============+
| Termination           |    50  Î©      |
+-----------------------+---------------+
| Input voltage range   |      0 to 5 V |
+-----------------------+---------------+
| Trigger level range   |    0 to 3.3 V |
+-----------------------+---------------+
| Minimum signal level  |      ~50 mV   |
+-----------------------+---------------+
|  Minimum pulse width  |  ~1 ns        |
+-----------------------+---------------+



Data connection
===============

A USB connection is used for data and power supply. Please ensure that the USB port is capable of providing the full
specified current (500 mA). A USB 2.0 data connection is required for reasonable performance. Operating the device via
a USB hub is strongly discouraged. The *TimeTagger 20* can stream about 5 M tags per second.


Status LEDs
===========

The *TimeTagger 20* has two LEDs showing status information. A green LED turns on when the USB power is connected.
An RGB LED shows the information tabulated below.

+-----------------------+-------------------------+
| green                 | firmware loaded         |
+-----------------------+-------------------------+
| blinking green-orange | time tags are streaming |
+-----------------------+-------------------------+
| red flash (0.1 s)     | an overflow occurred    |
+-----------------------+-------------------------+
| continuous red        | repeated overflows      |
+-----------------------+-------------------------+

Test signal
===========

The *TimeTagger 20* has a built in test signal generator that
generates a square wave with a frequency in the range 0.9 to 1.0 MHz.
You can apply the test signal to any input channel instead of the
external input. This is useful for testing, calibrating and setting up, 

Virtual channels
================

The architecture allows you to create virtual channels, e.g.,
you can create a new channel that represents the sum of two channels (logical OR),
or coincidence clicks of two channels (logical AND).

Synthetic input delay
=====================

You can introduce for each channel an input delay. This is useful
e.g. to compensate for propagation delay in cables of unequal length,
if the relative timing between two channels is important. The input delay
can be set individually for rising and for falling edges.

Synthetic dead time
===================

You can introduce for each channel a synthetic dead time. This is useful
when you want to suppress consecutive clicks that are closely separated,
e.g., to suppress after-pulsing of avalanche photo diodes or to suppress too
high data rates. The dead time can be set individually for rising and for falling edges.

Event filter
============

.. change V1.0.3

The event filter allows you to decrease the time tag rate without loosing
those time tags that are relevant to your application. In a typical use case
you have a high frequency signal applied to at least one channel. Examples
include fluorescence lifetime measurements or optical quantum information
and cryptography where you want to capture synchronization clicks
from a high repetition rate excitation laser.

To reduce the data rate you discard all synchronization clicks, except
those that succeed one of your low rate detector clicks, thereby forming
a reduced time tag stream. The reduced time tag stream is processed
by the software in the exact same fashion as the full time tag stream.

This feature is enabled by the event filter. All channels on your
Time Tagger 20 are fully equivalent. You can specify which channels
are filtered and which channels are used as triggers that enable
transmission of a subsequent tag on the filtered channels.

.. caution:: The time resolution of the event filter is 6 ns. To ensure
  deterministic filter logic, the physical time difference between
  the filtered channels and triggered channels must be
  larger than 9 ns. Note also that software defined input
  delays as set by the method :func:`setInputDelay`
  do not apply to the event filter logic.


Bin equilibration
=================

.. change V1.0.3

Discretization of electrical signals is never perfect. In time-to-digital conversion, this is manifest
as small differences (few ps) of the bin sizes inside the converter that even varies from chip to chip.
This imperfection is inherent to any time-to-digital conversion hardware.
It is usually not apparent to the user. However, when correlations between two channels are measured on short
time scales you might see this as a weak periodic ripple on top of your signal. 
We balance this on the software level at the cost of a decrease of
the time resolution by :math:`\sqrt{2}`. This feature is enabled by default.
If your application requires time resolution down to the jitter limit,
you can disable this feature.


Overflows
=========

The *TimeTagger 20* is capable of streaming on average about 5 million tags per second. 
Higher data rates for short times will be buffered internally so that no overflow occurs.
This internal buffer is limited so that on continuously higher data rates, data loss occurs and parts of the time tags are lost. The hardware allows you to check with ``timeTagger.getOverflows()`` whether an overflow condition
has occurred. If no overflow is returned, you can be sure that every time tag is received.

.. note:: When overflows occur, Time Tagger 20 will still produce valid chunks of data
  and discard the invalid tags inbetween. Your measurements data may still be valid, albeit,
  your acquisition time likely goes up.

General purpose IO (available upon request)
===========================================

The device is ready to be equipped with up to four SMA connectorized general purpose IO ports and an external clock input or output.
These can be used to implement custom features such as special fast input or output triggers, enable / disable gates,
software controllable input and output lines, etc.. Please contact us for custom designs.
